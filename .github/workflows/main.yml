name: Configuring a Node.js application with a PostgreSQL database With Discord Notifier
on: push
env:
  PG_DATABASE: ${{ secrets.DEV_DATABASE}}
  PG_USER: ${{ secrets.DEV_USERNAME }}
  PG_PASSWORD: ${{ secrets.DEV_PASSWORD }}
jobs:
  # Label of the container job
  run-tests:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:11.7
        # Provide the password for postgres
        env:
          POSTGRES_USER: ${{ secrets.DEV_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DEV_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DEV_DATABASE}}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: cd ./ && npm ci

      - name: Run unit tests
        run: cd ./ && npm test
      - name: Run the app
        id: run-app
        run: |
          cd ./
          npm install
          npx sequelize-cli db:drop
          npx sequelize-cli db:create
          npx sequelize-cli db:migrate
          PORT=3000 npm start &
          sleep 5

      - name: Run integration tests
        run: |
          cd ./
          npm install 
          npm run test
   #docker build and push to docker hub from the Dockerfile
  docker:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: |
          cd wd401practice && docker build -f Dockerfile --target production -t mikiyasget/sp-sc-prod:latest .
      - name: Push Docker image to Docker Hub
        run: |
          cd todo-app && docker push mikiyasget/sp-sc-prod:latest

  #add notification to discord channel
  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: # make sure the notification is sent AFTER the jobs you want included have completed
      - run-tests
      - docker
    if: ${{ always() }} 
    # You always want to be notified: success, failure, or cancelled

    steps:
      - name: Notify
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          username: "Bob"
          avatar-url: "https://octodex.github.com/images/Terracottocat_Single.png"
          title: "${{ github.workflow }}: {{STATUS}}"
          description: "${{ github.event_name }} trigged this {{STATUS}}!"
          include-details: "false"
          color-success: "#4287f5"
          color-failure: "eb4034"
          color-cancelled: "0x42daf5"
 